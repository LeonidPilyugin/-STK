<doc>
  <assembly>
    <name>AGI.AgUiFlightUtilities</name>
  </assembly>
  <members>
    <member name="T:AGI.AgUiFlightUtilities.tagAgEUiFlightMenuType">
      <summary>Enumeration AgEUiFlightMenuType.</summary>
    </member>
    <member name="F:AGI.AgUiFlightUtilities.tagAgEUiFlightMenuType.eMenuCommand">
      <summary>Enumeration AgEUiFlightMenuType:eMenuCommand</summary>
    </member>
    <member name="F:AGI.AgUiFlightUtilities.tagAgEUiFlightMenuType.eMenuParent">
      <summary>Enumeration AgEUiFlightMenuType:eMenuParent</summary>
    </member>
    <member name="F:AGI.AgUiFlightUtilities.tagAgEUiFlightMenuType.eMenuSeparator">
      <summary>Enumeration AgEUiFlightMenuType:eMenuSeparator</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons">
      <summary>Enumeration AgEUiFlightUtilDialogButtons.</summary>
    </member>
    <member name="F:AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons.eOkCancelApply">
      <summary>Enumeration AgEUiFlightUtilDialogButtons:eOkCancelApply</summary>
    </member>
    <member name="F:AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons.eOkCancel">
      <summary>Enumeration AgEUiFlightUtilDialogButtons:eOkCancel</summary>
    </member>
    <member name="F:AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons.eCloseNoApply">
      <summary>Enumeration AgEUiFlightUtilDialogButtons:eCloseNoApply</summary>
    </member>
    <member name="F:AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons.eCloseApply">
      <summary>Enumeration AgEUiFlightUtilDialogButtons:eCloseApply</summary>
    </member>
    <member name="F:AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons.eNoButtons">
      <summary>Enumeration AgEUiFlightUtilDialogButtons:eNoButtons</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightUIFactory">
      <summary>IAgUiFlightUIFactory Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightUIFactory.GetUIClassID(System.Object,System.String)">
      <summary>method GetUIClassID</summary>
      <param name="pObj"></param>
      <param name="bstrContainerCLSID"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightUIFactory.Version">
      <summary>property Version</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightApplyButtonClient">
      <summary>IAgUiFlightApplyButtonClient Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightApplyButtonClient.SetApplyButton(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton)">
      <summary>method SetApplyButton</summary>
      <param name="pObjUnknown"></param>
      <param name="pButton"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightApplyButtonClient.GetApplyButton(.IUnknown*@,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton*@)">
      <summary>method GetApplyButton</summary>
      <param name="ppObjUnknown"></param>
      <param name="ppButton"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightApplyButton">
      <summary>IAgUiFlightApplyButton Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightApplyButton.EnableApply(System.Boolean)">
      <summary>method EnableApply</summary>
      <param name="vbEnable"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl">
      <summary>IAgUiFlightCatalogTreeControl Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.GetSelItem">
      <summary></summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.FilterCategory(AGI.AgFlight.IAgFlightCatalogCategory,System.Boolean)">
      <summary></summary>
      <param name="pCatInfo"></param>
      <param name="vbUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.SelectItem(AGI.AgFlight.IAgFlightCatalogCategory,AGI.AgFlight.IAgFlightCatalogPath)">
      <summary></summary>
      <param name="pBranchCatInfo"></param>
      <param name="pPathToItem"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.SetMaxTreeDepth(System.Int32,System.Boolean)">
      <summary></summary>
      <param name="maxTreeDepth"></param>
      <param name="vbUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.Reset(System.Boolean)">
      <summary></summary>
      <param name="vbResetCurSelection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.GetSelItemPath(AGI.AgFlight.IAgFlightCatalogCategory*@,AGI.AgFlight.IAgFlightCatalogPath*@)">
      <summary></summary>
      <param name="ppSelCategory"></param>
      <param name="ppSelPath"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.UpdateAllTrees(System.Boolean)">
      <summary></summary>
      <param name="vbExceptThis"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.AllTreesReleaseAllData">
      <summary></summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.ExpandTree">
      <summary></summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.FilterAndSelect(System.String)">
      <summary></summary>
      <param name="bstrName"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.ForeColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.TabStop">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.Caption">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.ShowPropButton">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.ShowNewButton">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.ContainerCLSID">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl.FocusTreeControl">
      <summary />
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightApplication">
      <summary>IAgUiFlightApplication Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightApplication.GetUICLSID(System.Object,System.String,AGI.AgUiFlightUtilities.IAgUiFlightUIFactory*@)">
      <summary>method GetUICLSID</summary>
      <param name="pObj"></param>
      <param name="bstrContainerCLSID"></param>
      <param name="ppFactory"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightApplication.AddUIFactory(AGI.AgUiFlightUtilities.IAgUiFlightUIFactory)">
      <summary>method AddUIFactory</summary>
      <param name="pFactory"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightApplication.ClearUIFactories">
      <summary>method ClearUIFactories</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightApplication.InitPluginFactories">
      <summary>method InitPluginFactories</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightApplication.AddApplyButtonClient(AGI.AgUiFlightUtilities.IAgUiFlightApplyButtonClient)">
      <summary>method AddApplyButtonClient</summary>
      <param name="pApplyButtonClient"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightApplication.RemoveApplyButtonClient(AGI.AgUiFlightUtilities.IAgUiFlightApplyButtonClient)">
      <summary>method RemoveApplyButtonClient</summary>
      <param name="pApplyButtonClient"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightApplication.Shutdown">
      <summary>method Shutdown</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightApplication.ApplyButtonClients">
      <summary>property ApplyButtonClients</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightOnClose">
      <summary>IAgUiFlightOnClose Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightOnClose.OnDialogClose(.BSTR@,.BSTR@,.VARIANT_BOOL@)">
      <summary>method OnDialogClose</summary>
      <param name="pMessage"></param>
      <param name="pCaption"></param>
      <param name="pvbAskToContinue"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightOnClose.InterpretDialogCloseStatus(System.Int32)">
      <summary>method InterpretDialogCloseStatus</summary>
      <param name="status"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightUtilDialog">
      <summary>IAgUiFlightUtilDialog Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightUtilDialog.DoModal(System.Object,System.String,AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons,System.Boolean,System.Boolean,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pObjectUnknown"></param>
      <param name="dialogTitle"></param>
      <param name="buttonMode"></param>
      <param name="vbShowNoApplyToggle"></param>
      <param name="vbForceReadOnly"></param>
      <param name="vbForceApplyAlways"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightUtilDialog.DoModalOverride(System.Object,System.String,System.String,AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons,System.Boolean,System.Boolean,System.Boolean)">
      <summary>method DoModalOverride</summary>
      <param name="pObjectUnknown"></param>
      <param name="overrideUiClassID"></param>
      <param name="dialogTitle"></param>
      <param name="buttonMode"></param>
      <param name="vbShowNoApplyToggle"></param>
      <param name="vbForceReadOnly"></param>
      <param name="vbForceApplyAlways"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightUtilDialog.CreateModeless(System.Object,System.Boolean,System.Boolean,System.String,System.String,System.Int32,AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons,System.Boolean,System.Boolean)">
      <summary>method CreateModeless</summary>
      <param name="pObjectUnknown"></param>
      <param name="vbCloneObject"></param>
      <param name="vbOverrideUiClassID"></param>
      <param name="overrideUiClassID"></param>
      <param name="dialogTitle"></param>
      <param name="hOwnerWnd"></param>
      <param name="buttonMode"></param>
      <param name="vbShowNoApplyToggle"></param>
      <param name="vbForceReadOnly"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightUtilDialog.DestroyModeless">
      <summary>method DestroyModeless</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightUtilDialog.IsWindowValid">
      <summary>method IsWindowValid</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightUtilDialog.WindowHandle">
      <summary>method WindowHandle</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightUtilDialog.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightUtilDialog.ModalReturnCode">
      <summary>property ModalReturnCode</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities._IAgUiFlightUtilDialogEvents">
      <summary>_IAgUiFlightUtilDialogEvents Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightUtilDialogEvents.OnInitDialog(System.Object,System.Object)">
      <summary>method OnInitDialog</summary>
      <param name="pObjectClone"></param>
      <param name="pUI"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightUtilDialogEvents.OnPreApply">
      <summary>method OnPreApply</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightUtilDialogEvents.OnPostApply">
      <summary>method OnPostApply</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightUtilDialogEvents.OnClose">
      <summary>method OnClose</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightCatalogPicker">
      <summary>IAgUiFlightCatalogPicker Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogPicker.DoModal(AGI.AgFlight.IAgFlightCatalogCategory,System.String,AGI.AgFlight.IAgFlightCatalogPath)">
      <summary>method DoModal</summary>
      <param name="pCategory"></param>
      <param name="windowTitle"></param>
      <param name="pSelItem"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateResult">
      <summary>IAgUiFlightDropEditValidateResult Interface</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateResult.IsValid">
      <summary>property IsValid</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateResult.ValidValue">
      <summary>property ValidValue</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateResult.StatusMessage">
      <summary>property StatusMessage</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble">
      <summary>IAgUiFlightDropEditValidateDouble Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble.DropEditValidateDouble(System.Int32,System.Int32,System.Double)">
      <summary>method DropEditValidateDouble</summary>
      <param name="ctrlHWnd"></param>
      <param name="ctrlID"></param>
      <param name="value"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble.DropEditPostValidate(System.Int32,System.Int32)">
      <summary>method DropEditPostValidate</summary>
      <param name="ctrlHWnd"></param>
      <param name="ctrlID"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit">
      <summary>IAgUiFlightDropEdit Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.AttachEditMinMax(System.String,System.Int32,AGI.AgFlight.tagAgEFlightDimension,AGI.AgComUtilities.IAgValidateChildren,System.Double,System.Double)">
      <summary>method AttachEditMinMax</summary>
      <param name="prefsName"></param>
      <param name="ctrlHWnd"></param>
      <param name="dimType"></param>
      <param name="pWeakRefParent"></param>
      <param name="minVal"></param>
      <param name="maxVal"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.AttachEditValidate(System.String,System.Int32,AGI.AgFlight.tagAgEFlightDimension,AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble,AGI.AgComUtilities.IAgValidateChildren,System.Boolean)">
      <summary>method AttachEditValidate</summary>
      <param name="prefsName"></param>
      <param name="ctrlHWnd"></param>
      <param name="dimType"></param>
      <param name="pWeakRefValidate"></param>
      <param name="pWeakRefParent"></param>
      <param name="vbValidateOnKillFocus"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.SetDoubleValue(System.Double)">
      <summary>method SetDoubleValue</summary>
      <param name="internalValue"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.GetValidatedValue">
      <summary>method GetValidatedValue</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.GetCurrentUnit">
      <summary>method GetCurrentUnit</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.Validate(AGI.AgComUtilities.tagAgEControlValidationMode)">
      <summary>method Validate</summary>
      <param name="validationMode"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.Enable(System.Boolean)">
      <summary>method Enable</summary>
      <param name="vbEnable"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.SetReadOnly(System.Boolean)">
      <summary>method SetReadOnly</summary>
      <param name="vbReadOnly"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.SetErrorMsg(System.String)">
      <summary>method SetErrorMsg</summary>
      <param name="msg"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.SetInteger">
      <summary>method SetInteger</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.SetWindowText(System.String)">
      <summary>method SetWindowText</summary>
      <param name="windowText"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.ClearWindowText">
      <summary>method ClearWindowText</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.DetachDropEdit">
      <summary>method DetachDropEdit</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightDropEdit.IsValid">
      <summary>property IsValid</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed">
      <summary>IAgUiFlightAirspeed Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.EnableWidgets(System.Boolean)">
      <summary>method EnableWidgets</summary>
      <param name="vbEnable"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.SetReadOnly(System.Boolean,System.Boolean)">
      <summary>method SetReadOnly</summary>
      <param name="readOnlyTFs"></param>
      <param name="readOnlyCombo"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.ShowWidgets(System.Boolean)">
      <summary>method ShowWidgets</summary>
      <param name="show"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.OnInitDialog(System.String,System.Int32,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren,AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble)">
      <summary>method OnInitDialog</summary>
      <param name="bstrUiName"></param>
      <param name="idEditAirspeed"></param>
      <param name="idEditMach"></param>
      <param name="idComboAirspeedType"></param>
      <param name="hWndParent"></param>
      <param name="pWeakRefParent"></param>
      <param name="pValidateDoubleOptional"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.OnInitDialogDotNET(System.String,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren,AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble)">
      <summary>method OnInitDialogDotNET</summary>
      <param name="bstrUiName"></param>
      <param name="hWndEditAirspeed"></param>
      <param name="hWndEditMach"></param>
      <param name="hWndComboAirspeedType"></param>
      <param name="pWeakRefParent"></param>
      <param name="pValidateDoubleOptional"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.Initialize(System.Double,System.Double,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,AGI.AgFlight.IAgFlightAtmosphereCalcData)">
      <summary>method Initialize</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
      <param name="eCurAirspeedType"></param>
      <param name="curAirspeed"></param>
      <param name="pAtmosCalcData"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.Initialize2(System.Double,System.Double,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,System.Double,AGI.AgFlight.IAgFlightAtmosphereCalcData)">
      <summary>method Initialize2</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
      <param name="eCurAirspeedType"></param>
      <param name="curAirspeed"></param>
      <param name="eMinMaxAirspeedType"></param>
      <param name="minAirspeed"></param>
      <param name="maxAirspeed"></param>
      <param name="pAtmosCalcData"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.UpdateAltitudes(System.Double,System.Double,System.Double)">
      <summary>method UpdateAltitudes</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.Update(System.Double,System.Double,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,System.Double)">
      <summary>method Update</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
      <param name="eMinMaxAirspeedType"></param>
      <param name="minAirspeed"></param>
      <param name="maxAirspeed"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.GetAirspeed(AGI.AgFlight.tagAgEFlightAirspeedType)">
      <summary>method GetAirspeed</summary>
      <param name="eAirspeedType"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.GetAirspeedAtAlt(System.Double,AGI.AgFlight.tagAgEFlightAirspeedType)">
      <summary>method GetAirspeedAtAlt</summary>
      <param name="dAltitude"></param>
      <param name="eAirspeedType"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.GetMaxVertRate(System.Double,System.Double)">
      <summary>property GetMaxVertRate</summary>
      <param name="minAlt"></param>
      <param name="maxAlt"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.UpdateVertRate(System.Double,System.Double,System.Double)">
      <summary>method UpdateVertRate</summary>
      <param name="minAlt"></param>
      <param name="maxAlt"></param>
      <param name="vertRate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.SetWindowText(System.String)">
      <summary>method SetWindowText</summary>
      <param name="windowText"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.ClearWindowText">
      <summary>method ClearWindowText</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.UpdateControls">
      <summary>method UpdateControls</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.AirspeedType">
      <summary>property AirspeedType</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightAirspeed.Airspeed">
      <summary>property Airspeed</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightCruiseAirspeed">
      <summary>IAgUiFlightCruiseAirspeed Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCruiseAirspeed.EnableWidgets(System.Boolean)">
      <summary>method EnableWidgets</summary>
      <param name="vbEnable"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCruiseAirspeed.OnInitDialog(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren)">
      <summary>method OnInitDialog</summary>
      <param name="bstrUiName"></param>
      <param name="idComboCruiseSpeed"></param>
      <param name="idEditAirspeed"></param>
      <param name="idEditMach"></param>
      <param name="idComboAirspeedType"></param>
      <param name="hWndParent"></param>
      <param name="pWeakRefParent"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCruiseAirspeed.OnInitDialogDotNET(System.String,System.Int32,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren)">
      <summary>method OnInitDialogDotNET</summary>
      <param name="bstrUiName"></param>
      <param name="hWndComboCruiseSpeed"></param>
      <param name="hWndEditAirspeed"></param>
      <param name="hWndEditMach"></param>
      <param name="hWndComboAirspeedType"></param>
      <param name="pWeakRefParent"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCruiseAirspeed.OnInitialize(AGI.AgFlight.tagAgEFlightCruiseAirspeedSource,System.Double,AGI.AgFlight.IAgFlightCruiseAirspeed,AGI.AgFlight.IAgFlightPerfModelCollection,AGI.AgFlight.IAgFlightAtmosphereCalcData,AGI.AgFlight.IAgFlightConfiguration,System.Boolean)">
      <summary>method OnInitialize</summary>
      <param name="eAirspeedSource"></param>
      <param name="dAltitude"></param>
      <param name="pCruiseAirspeed"></param>
      <param name="pAircraftProps"></param>
      <param name="pAtmosCalcData"></param>
      <param name="pConfig"></param>
      <param name="vbNoDurationCheck"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCruiseAirspeed.OnApply">
      <summary>method OnApply</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCruiseAirspeed.OnAltitudeChange(System.Double)">
      <summary>method OnAltitudeChange</summary>
      <param name="dAltitude"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCruiseAirspeed.OnProfileAltitudeChange(AGI.AgFlight.IAgFlightProfileItem,System.Boolean)">
      <summary>method OnProfileAltitudeChange</summary>
      <param name="pProfileItem"></param>
      <param name="vbUseWindFrame"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCruiseAirspeed.QueryCruiseAirspeed(AGI.AgFlight.IAgFlightCruiseAirspeed)">
      <summary>method QueryCruiseAirspeed</summary>
      <param name="pResultCruiseAirspeed"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightNewProcedure">
      <summary>IAgUiFlightNewProcedure Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightNewProcedure.DoModal(AGI.AgFlight.IAgFlightMissionPhase,AGI.AgFlight.IAgFlightProcedure)">
      <summary>method DoModal</summary>
      <param name="pMissionPhase"></param>
      <param name="pPrevProcedure"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightNewProcedure.Procedure">
      <summary>property Procedure</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightNewProcedure.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightSiteDialog">
      <summary>IAgUiFlightSiteDialog Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightSiteDialog.DoModal(AGI.AgFlight.IAgFlightMissionPhase,AGI.AgFlight.IAgFlightProcedure)">
      <summary>method DoModal</summary>
      <param name="pPhase"></param>
      <param name="pPrevProc"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightSiteDialog.Site">
      <summary>property Site</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureDialog">
      <summary>IAgUiFlightProcedureDialog Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureDialog.DoModal(AGI.AgFlight.IAgFlightMissionPhase,AGI.AgFlight.IAgFlightProcedure,System.Object)">
      <summary>method DoModal</summary>
      <param name="pPhase"></param>
      <param name="pPrevProc"></param>
      <param name="pUnkSite"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureDialog.Procedure">
      <summary>property Procedure</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightConfigurationDialog">
      <summary>IAgUiFlightConfigurationDialog Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightConfigurationDialog.DoModal(System.Int32,AGI.AgFlight.IAgFlightConfiguration,AGI.AgFlight.IAgFlightAircraft,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="accessKey"></param>
      <param name="pConfig"></param>
      <param name="pAircraft"></param>
      <param name="vbReadOnly"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightConfigurationDialog.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightAirspeedConvert">
      <summary>IAgUiFlightAirspeedConvert Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeedConvert.SetAltitude(System.Double,System.Boolean,System.Double,System.Double,AGI.AgFlight.IAgFlightAtmosphereCalcData)">
      <summary>method SetAltitude</summary>
      <param name="alt"></param>
      <param name="vbAllowChange"></param>
      <param name="min"></param>
      <param name="max"></param>
      <param name="pAtmosCalcData"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeedConvert.SetTAS(System.Double,System.Double,System.Double)">
      <summary>method SetTAS</summary>
      <param name="TAS"></param>
      <param name="min"></param>
      <param name="max"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAirspeedConvert.DoModal(System.String)">
      <summary>method DoModal</summary>
      <param name="strCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightAirspeedConvert.Altitude">
      <summary>property Altitude</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightAirspeedConvert.TAS">
      <summary>property TAS</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProfileItem">
      <summary>IAgUiFlightProfileItem Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProfileItem.DoModal(AGI.AgFlight.IAgFlightProfileItem,AGI.AgFlight.IAgFlightAtmosphereCalcData,System.String,AGI.AgFlight.tagAgEFlightAirspeedType,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pItem"></param>
      <param name="pAtmosCalcData"></param>
      <param name="windowCaption"></param>
      <param name="eAirspeedType"></param>
      <param name="vbReadOnly"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightThrustPowerRequired">
      <summary>IAgUiFlightThrustPowerRequired Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightThrustPowerRequired.DoModal(System.String,AGI.AgFlight.IAgFlightAeroStrategy,AGI.AgFlight.IAgFlightAircraft,AGI.AgFlight.IAgFlightPropulsionCalculator,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="strCaption"></param>
      <param name="pAero"></param>
      <param name="pAircraft"></param>
      <param name="pCalc"></param>
      <param name="vbShowSeaLevelEquivToggle"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightThrustPowerRequired.GetComputedThrust">
      <summary>method GetComputedThrust</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightThrustPowerRequired.GetComputedPower">
      <summary>method GetComputedPower</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightMenu">
      <summary>IAgUiFlightMenu Interface</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenu.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommand">
      <summary>IAgUiFlightMenuCommand Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommand.OnClick">
      <summary>method OnClick</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommand.Name">
      <summary>property Name</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommand.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommand.Enabled">
      <summary>property Enabled</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommandEdit">
      <summary>IAgUiFlightMenuCommandEdit Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommandEdit.OnClick">
      <summary>method OnClick</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommandEdit.SetOnClick(System.Int32,System.Int32)">
      <summary>method SetOnClick</summary>
      <param name="parentHWnd"></param>
      <param name="commandID"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommandEdit.Name">
      <summary>property Name</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommandEdit.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuCommandEdit.Enabled">
      <summary>property Enabled</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightMenuParent">
      <summary>IAgUiFlightMenuParent Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMenuParent.InsertMenu(System.Int32,AGI.AgUiFlightUtilities.IAgUiFlightMenu)">
      <summary>method InsertMenu</summary>
      <param name="index"></param>
      <param name="pMenu"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMenuParent.Terminate">
      <summary>method Terminate</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuParent.Name">
      <summary>property Name</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuParent.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuParent.Enabled">
      <summary>property Enabled</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuParent.Count">
      <summary>property Count</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuParent.Menu">
      <summary>property Menu</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightMenuParentEdit">
      <summary>IAgUiFlightMenuParentEdit Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMenuParentEdit.InsertMenu(System.Int32,AGI.AgUiFlightUtilities.IAgUiFlightMenu)">
      <summary>method InsertMenu</summary>
      <param name="index"></param>
      <param name="pMenu"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuParentEdit.Name">
      <summary>property Name</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuParentEdit.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuParentEdit.Enabled">
      <summary>property Enabled</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuParentEdit.Count">
      <summary>property Count</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMenuParentEdit.Menu">
      <summary>property Menu</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightMenuSeparator">
      <summary>IAgUiFlightMenuSeparator Interface</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightRegisteredMenu">
      <summary>IAgUiFlightRegisteredMenu Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightRegisteredMenu.AddMenu(AGI.AgFlight.IAgFlightMission,System.Object)">
      <summary>method AddMenu</summary>
      <param name="pMission"></param>
      <param name="pSelection"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureCollectionRegisteredMenu">
      <summary>IAgUiFlightProcedureCollectionRegisteredMenu Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureCollectionRegisteredMenu.AddMenu(AGI.AgFlight.IAgFlightProcedureCollection,System.Object)">
      <summary>method AddMenu</summary>
      <param name="pProcCollection"></param>
      <param name="pSelection"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightCatalogRegisteredMenu">
      <summary>IAgUiFlightCatalogRegisteredMenu Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogRegisteredMenu.AddCatalogMenu(AGI.AgUiFlightUtilities.IAgUiFlightCatalogTreeControl,AGI.AgFlight.IAgFlightCatalogCategory,AGI.AgFlight.IAgFlightCatalogData,AGI.AgFlight.IAgFlightCatalogPath)">
      <summary>method AddCatalogMenu</summary>
      <param name="pTreeControl"></param>
      <param name="pBranchCategory"></param>
      <param name="pSelection"></param>
      <param name="pSelItemPath"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightWindowStack">
      <summary>IAgUiFlightWindowStack Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightWindowStack.SetAppWindow(System.Int32)">
      <summary>method SetAppWindow</summary>
      <param name="newVal"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightWindowStack.PopCurrentWindow">
      <summary>method PopCurrentWindow</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightWindowStack.PushCurrentWindow(System.Int32)">
      <summary>method PushCurrentWindow</summary>
      <param name="newVal"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightWindowStack.CurrentWindow">
      <summary>property CurrentWindow</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightWindowStack.AppWindow">
      <summary>property AppWindow</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightTerrainBrowse">
      <summary>IAgUiFlightTerrainBrowse Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightTerrainBrowse.BrowseForTerrainItem">
      <summary>method BrowseForTerrainItem</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightAircraftDialog">
      <summary>IAgUiFlightAircraftDialog Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAircraftDialog.DoModal(AGI.AgFlight.IAgFlightAircraft)">
      <summary>method DoModal</summary>
      <param name="pACModels"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightSiteProcedure">
      <summary>IAgUiFlightSiteProcedure Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightSiteProcedure.DoModal(AGI.AgFlight.IAgFlightProcedure)">
      <summary>method DoModal</summary>
      <param name="pProcedure"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightWindAtmosphereDialog">
      <summary>IAgUiFlightWindAtmosphereDialog Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightWindAtmosphereDialog.DoModal(System.Object,System.String)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionOrProc"></param>
      <param name="strCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightWindAtmosphereDialog.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightCatalogQuery">
      <summary>IAgUiFlightCatalogQuery Interface</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightEvents">
      <summary>IAgUiFlightEvents Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightEvents.Terminate">
      <summary>method Terminate</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightEvents.FireOnNewProcedure(AGI.AgFlight.IAgFlightProcedure)">
      <summary>method FireOnNewProcedure</summary>
      <param name="pProcedure"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities._IAgUiFlightEventsEvents">
      <summary>_IAgUiFlightEventsEvents Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightEventsEvents.OnNewProcedure(AGI.AgFlight.IAgFlightProcedure)">
      <summary>method OnNewProcedure</summary>
      <param name="pProcedure"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightAdvPerfStrategyInit">
      <summary>IAgUiFlightAdvPerfStrategyInit Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightAdvPerfStrategyInit.SetAdvPerfFixedWing(AGI.AgFlight.IAgFlightAdvPerfFixedWing,AGI.AgComUtilities.IAgUiCompositeControlInit)">
      <summary>method SetAdvPerfFixedWing</summary>
      <param name="pFixedWing"></param>
      <param name="pUIFixedWing"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightAdvPerfStrategyInit.AeroStrategy">
      <summary>property AeroStrategy</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightAdvPerfStrategyInit.PowerplantStrategy">
      <summary>property PowerplantStrategy</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightAdvPerfStrategyInit.WingSurfaceArea">
      <summary>property WingSurfaceArea</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightContainedControl">
      <summary>IAgUiFlightContainedControl Interface</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightContainedControl.ContainedClassID">
      <summary>property ContainedClassID</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTree">
      <summary>AGI IAgUiFlightPerfModelTree Interface</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTree.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTree.Enabled">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTree.TabStop">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTree.Caption">
      <summary />
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTreeInitialize">
      <summary>AGI IAgUiFlightPerfModelTreeInitialize Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTreeInitialize.SelectItem(System.String,System.String)">
      <summary>method SelectItem</summary>
      <param name="strModelType"></param>
      <param name="strModelName"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTreeInitialize.UpdateAllTrees(System.Boolean)">
      <summary>method UpdateAllTrees</summary>
      <param name="vbAllExceptThis"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTreeInitialize.Aircraft">
      <summary>property Aircraft</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTreeInitialize.AircraftProperties">
      <summary>property AircraftProperties</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTreeInitialize.SingleChoiceMode">
      <summary>property SingleChoiceMode</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelTreeInitialize.AircraftPropertiesMode">
      <summary>property AircraftPropertiesMode</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities._IAgUiFlightPerfModelTreeEvents">
      <summary>AGI _IAgUiFlightPerfModelTreeEvents Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightPerfModelTreeEvents.SelectionChanged(System.String,System.String)">
      <summary>method SelectionChanged</summary>
      <param name="strModelType"></param>
      <param name="strModelName"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightPerfModelTreeEvents.SelectionRenamed(System.String,System.String,System.String)">
      <summary>method SelectionRenamed</summary>
      <param name="strModelType"></param>
      <param name="strOldModelName"></param>
      <param name="strNewModelName"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightPerfModelTreeEvents.SelectionDeleted(System.String,System.String)">
      <summary>method SelectionDeleted</summary>
      <param name="strModelType"></param>
      <param name="strModelName"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightCatalog">
      <summary>AGI IAgUiFlightCatalog Interface</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalog.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalog.ForeColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalog.TabStop">
      <summary />
    </member>
    <member name="T:AGI.AgUiFlightUtilities._IAgUiFlightCatalogEvents">
      <summary>AGI _IAgUiFlightCatalogEvents Interface</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient">
      <summary>IAgUiFlightLiftCoefficient Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.SetValues(AGI.AgFlight.IAgFlightAtmosphereCalcData,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>method SetValues</summary>
      <param name="pAtmosCalcData"></param>
      <param name="vbCompressibleFlow"></param>
      <param name="dSref"></param>
      <param name="dWeight1"></param>
      <param name="dWeight2"></param>
      <param name="dAlt1"></param>
      <param name="dAlt2"></param>
      <param name="dTAS1"></param>
      <param name="dTAS2"></param>
      <param name="dAOA1"></param>
      <param name="dAOA2"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.DoModal(System.String)">
      <summary>method DoModal</summary>
      <param name="strCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.CompressibleFlow">
      <summary>property CompressibleFlow</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.S">
      <summary>property S</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.Cl0">
      <summary>property Cl0</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.ClAlpha">
      <summary>property ClAlpha</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.Weight1">
      <summary>property Weight1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.Weight2">
      <summary>property Weight2</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.Alt1">
      <summary>property Alt1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.Alt2">
      <summary>property Alt2</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.TAS1">
      <summary>property TAS1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.TAS2">
      <summary>property TAS2</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.AOA1">
      <summary>property AOA1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightLiftCoefficient.AOA2">
      <summary>property AOA2</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightSetProcTime">
      <summary>IAgUiFlightSetProcTime Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightSetProcTime.DoModal(AGI.AgFlight.IAgFlightMission,AGI.AgFlight.IAgFlightProcedureTimeInfo,System.String)">
      <summary>method DoModal</summary>
      <param name="pMission"></param>
      <param name="pTimeInfo"></param>
      <param name="windowCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightSetProcTime.Icon">
      <summary>method Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities._IAgUiFlightSetProcTimeEvents">
      <summary>_IAgUiFlightSetProcTimeEvents Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightSetProcTimeEvents.OnMissionCalcInterrupt">
      <summary>method OnMissionCalcInterrupt</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightSetProcTimeEvents.OnApply">
      <summary>method OnPreApply</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelInit">
      <summary>IAgUiFlightPerfModelInit Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightPerfModelInit.SetUiPerformanceModel(AGI.AgFlight.IAgFlightPerformanceModel)">
      <summary>method SetUiPerformanceModel</summary>
      <param name="pPerfModel"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightMissionCalcManager">
      <summary>IAgUiFlightMissionCalcManager Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMissionCalcManager.SetParentWindow(System.Int32)">
      <summary>method SetParentWindow</summary>
      <param name="parentHWnd"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMissionCalcManager.ComputeMission(AGI.AgFlight.IAgFlightMission,System.Boolean)">
      <summary>method ComputeMission</summary>
      <param name="pMission"></param>
      <param name="vbSendNtfUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMissionCalcManager.SendNtfUpdate(System.Object)">
      <summary>method SendNtfUpdate</summary>
      <param name="pUnk"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMissionCalcManager.ComputeAllMissions(System.Boolean)">
      <summary>method ComputeAllMissions</summary>
      <param name="vbSendNtfUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMissionCalcManager.IgnoreUpdate(System.Boolean)">
      <summary>method IgnoreUpdate</summary>
      <param name="vbIgnoreUpdates"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMissionCalcManager.Start">
      <summary>method Start</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMissionCalcManager.Stop">
      <summary>method Stop</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightCalcProgress">
      <summary>IAgUiFlightCalcProgress Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCalcProgress.SetParentWindow(System.Int32)">
      <summary>method SetParentWindow</summary>
      <param name="parentHWnd"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCalcProgress.SetCaption(System.String)">
      <summary>method SetCaption</summary>
      <param name="strCaption"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCalcProgress.SetInitialDelay(System.Double)">
      <summary>method SetInitialDelay</summary>
      <param name="delayInSec"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCalcProgress.DestroyWindow">
      <summary>method DestroyWindow</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcCalcOptions">
      <summary>IAgUiFlightProcCalcOptions Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcCalcOptions.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pProcsPhaseMission"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcCalcOptions.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightMultiSelProcedureTool">
      <summary>IAgUiFlightMultiSelProcedureTool Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMultiSelProcedureTool.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMultiSelProcedureTool.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMultiSelProcedureTool.MenuName">
      <summary>property MenuName</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureCruiseAltitude">
      <summary>IAgUiFlightProcedureCruiseAltitude Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureCruiseAltitude.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureCruiseAltitude.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureCruiseAltitude.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureEnrouteCruiseAirspeed">
      <summary>IAgUiFlightProcedureEnrouteCruiseAirspeed Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureEnrouteCruiseAirspeed.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureEnrouteCruiseAirspeed.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureEnrouteCruiseAirspeed.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureSecondCruiseAirspeed">
      <summary>IAgUiFlightProcedureSecondCruiseAirspeed Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureSecondCruiseAirspeed.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureSecondCruiseAirspeed.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureSecondCruiseAirspeed.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureTurnRadiusFactor">
      <summary>IAgUiFlightProcedureTurnRadiusFactor Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureTurnRadiusFactor.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureTurnRadiusFactor.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureTurnRadiusFactor.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureMaxSpeedTurns">
      <summary>IAgUiFlightProcedureMaxSpeedTurns Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureMaxSpeedTurns.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureMaxSpeedTurns.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureMaxSpeedTurns.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightMoveWaypoint">
      <summary>IAgUiFlightMoveWaypoint Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMoveWaypoint.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightMoveWaypoint.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightMoveWaypoint.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightSwitchP2PProcType">
      <summary>IAgUiFlightSwitchP2PProcType Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightSwitchP2PProcType.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightSwitchP2PProcType.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightSwitchP2PProcType.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightReverseProcedureOrder">
      <summary>IAgUiFlightReverseProcedureOrder Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightReverseProcedureOrder.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightReverseProcedureOrder.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightReverseProcedureOrder.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureCourseHeadingOptions">
      <summary>IAgUiFlightProcedureCourseHeadingOptions Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureCourseHeadingOptions.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureCourseHeadingOptions.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureCourseHeadingOptions.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureEnrouteTurnDir">
      <summary>IAgUiFlightProcedureEnrouteTurnDir Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureEnrouteTurnDir.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureEnrouteTurnDir.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureEnrouteTurnDir.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureDelayEnrouteClimbDescents">
      <summary>IAgUiFlightProcedureDelayEnrouteClimbDescents Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureDelayEnrouteClimbDescents.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureDelayEnrouteClimbDescents.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureDelayEnrouteClimbDescents.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureFlyCruiseAirspeedProfile">
      <summary>IAgUiFlightProcedureFlyCruiseAirspeedProfile Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureFlyCruiseAirspeedProfile.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureFlyCruiseAirspeedProfile.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureFlyCruiseAirspeedProfile.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureAGLMSLAltitude">
      <summary>IAgUiFlightProcedureAGLMSLAltitude Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureAGLMSLAltitude.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureAGLMSLAltitude.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureAGLMSLAltitude.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureVertPlaneOptions">
      <summary>IAgUiFlightProcedureVertPlaneOptions Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureVertPlaneOptions.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureVertPlaneOptions.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureVertPlaneOptions.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureWindAtmosphereModels">
      <summary>IAgUiFlightProcedureWindAtmosphereModels Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureWindAtmosphereModels.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureWindAtmosphereModels.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureWindAtmosphereModels.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureTimeDuration">
      <summary>IAgUiFlightProcedureTimeDuration Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureTimeDuration.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureTimeDuration.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcedureTimeDuration.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightCatalogMgrSize">
      <summary>IAgUiFlightCatalogMgrSize Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogMgrSize.SetSize(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>method SetSize</summary>
      <param name="vbParentPosValid"></param>
      <param name="xParentLeft"></param>
      <param name="xParentRight"></param>
      <param name="yParentTop"></param>
      <param name="yParentBottom"></param>
      <param name="topSplitterWidth"></param>
      <param name="topSplitterHeight"></param>
      <param name="dataSplitterWidthLeft"></param>
      <param name="dataSplitterWidthRight"></param>
      <param name="dataSplitterHeight"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogMgrSize.GetParentWindowPos(.long@,.long@,.long@,.long@)">
      <summary>method GetParentWindowPos</summary>
      <param name="pxLeft"></param>
      <param name="pxRight"></param>
      <param name="pyTop"></param>
      <param name="pyBottom"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogMgrSize.GetTopSplitterPaneSize(.long@,.long@)">
      <summary>method GetTopSplitterPaneSize</summary>
      <param name="pWidth"></param>
      <param name="pHeight"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightCatalogMgrSize.GetDataSplitterPaneSize(.long@,.long@,.long@)">
      <summary>method GetDataSplitterPaneSize</summary>
      <param name="pWidthLeft"></param>
      <param name="pWidthRight"></param>
      <param name="pHeight"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightCatalogMgrSize.ParentWindowPosValid">
      <summary>property ParentWindowPosValid</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightSpatialQueryRegistry">
      <summary>AGI IAgUiFlightSpatialQueryRegistry Interface</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightSpatialQueryRegistry.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightSpatialQueryRegistry.ForeColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightSpatialQueryRegistry.TabStop">
      <summary />
    </member>
    <member name="T:AGI.AgUiFlightUtilities._IAgUiFlightSpatialQueryRegistryEvents">
      <summary>AGI _IAgUiFlightSpatialQueryRegistryEvents Interface</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightPostApply">
      <summary>IAgUiFlightPostApply Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightPostApply.PostApply(System.Object)">
      <summary>method PostApply</summary>
      <param name="pOrigObject"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcShiftRotate">
      <summary>IAgUiFlightProcShiftRotate Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcShiftRotate.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcShiftRotate.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightProcShiftRotate.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightGetObjectUnknown">
      <summary>IAgUiFlightGetObjectUnknown Interface</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.IAgUiFlightGetObjectUnknown.ObjectUnknown">
      <summary>property ObjectUnknown</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightProcedureTurnRadiusFactorWizard">
      <summary>IAgUiFlightProcedureTurnRadiusFactorWizard Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightProcedureTurnRadiusFactorWizard.DoModal(AGI.AgFlight.IAgFlightProcedure,System.Double)">
      <summary>method DoModal</summary>
      <param name="pProc"></param>
      <param name="initTRF"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightUpdate">
      <summary>IAgUiFlightUpdate Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightUpdate.UpdateAll">
      <summary>method UpdateAll</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightDotNetWidgetsHelper">
      <summary>IAgUiFlightDotNetWidgetsHelper Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDotNetWidgetsHelper.SetDotNetComboStrings(System.Int32,AGI.AgComUtilities.IAgComBSTRCollection)">
      <summary>method SetDotNetComboStrings</summary>
      <param name="hComboHandle"></param>
      <param name="pStrings"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightDotNetWidgetsHelper.AddDotNetComboString(System.Int32,System.String)">
      <summary>method AddDotNetComboString</summary>
      <param name="hComboHandle"></param>
      <param name="bstrString"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.IAgUiFlightValidateExt">
      <summary>IAgUiFlightValidateExt Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.IAgUiFlightValidateExt.ValidateExt(AGI.AgComUtilities.tagAgEControlValidationMode)">
      <summary>method ValidateExt</summary>
      <param name="eValidationMode"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightUtilDialog">
      <summary>AgUiFlightUtilDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightUtilDialog.DoModal(System.Object,System.String,AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons,System.Boolean,System.Boolean,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pObjectUnknown"></param>
      <param name="dialogTitle"></param>
      <param name="buttonMode"></param>
      <param name="vbShowNoApplyToggle"></param>
      <param name="vbForceReadOnly"></param>
      <param name="vbForceApplyAlways"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightUtilDialog.DoModalOverride(System.Object,System.String,System.String,AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons,System.Boolean,System.Boolean,System.Boolean)">
      <summary>method DoModalOverride</summary>
      <param name="pObjectUnknown"></param>
      <param name="overrideUiClassID"></param>
      <param name="dialogTitle"></param>
      <param name="buttonMode"></param>
      <param name="vbShowNoApplyToggle"></param>
      <param name="vbForceReadOnly"></param>
      <param name="vbForceApplyAlways"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightUtilDialog.CreateModeless(System.Object,System.Boolean,System.Boolean,System.String,System.String,System.Int32,AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons,System.Boolean,System.Boolean)">
      <summary>method CreateModeless</summary>
      <param name="pObjectUnknown"></param>
      <param name="vbCloneObject"></param>
      <param name="vbOverrideUiClassID"></param>
      <param name="overrideUiClassID"></param>
      <param name="dialogTitle"></param>
      <param name="hOwnerWnd"></param>
      <param name="buttonMode"></param>
      <param name="vbShowNoApplyToggle"></param>
      <param name="vbForceReadOnly"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightUtilDialog.DestroyModeless">
      <summary>method DestroyModeless</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightUtilDialog.IsWindowValid">
      <summary>method IsWindowValid</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightUtilDialog.WindowHandle">
      <summary>method WindowHandle</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightUtilDialog.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightUtilDialog.ModalReturnCode">
      <summary>property ModalReturnCode</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightUtilDialogEvents_Event.OnInitDialog">
      <summary>method OnInitDialog</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightUtilDialogEvents_Event.OnPreApply">
      <summary>method OnPreApply</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightUtilDialogEvents_Event.OnPostApply">
      <summary>method OnPostApply</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightUtilDialogEvents_Event.OnClose">
      <summary>method OnClose</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass">
      <summary>AgUiFlightUtilDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.DoModal(System.Object,System.String,AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons,System.Boolean,System.Boolean,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pObjectUnknown"></param>
      <param name="dialogTitle"></param>
      <param name="buttonMode"></param>
      <param name="vbShowNoApplyToggle"></param>
      <param name="vbForceReadOnly"></param>
      <param name="vbForceApplyAlways"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.DoModalOverride(System.Object,System.String,System.String,AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons,System.Boolean,System.Boolean,System.Boolean)">
      <summary>method DoModalOverride</summary>
      <param name="pObjectUnknown"></param>
      <param name="overrideUiClassID"></param>
      <param name="dialogTitle"></param>
      <param name="buttonMode"></param>
      <param name="vbShowNoApplyToggle"></param>
      <param name="vbForceReadOnly"></param>
      <param name="vbForceApplyAlways"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.CreateModeless(System.Object,System.Boolean,System.Boolean,System.String,System.String,System.Int32,AGI.AgUiFlightUtilities.tagAgEUiFlightUtilDialogButtons,System.Boolean,System.Boolean)">
      <summary>method CreateModeless</summary>
      <param name="pObjectUnknown"></param>
      <param name="vbCloneObject"></param>
      <param name="vbOverrideUiClassID"></param>
      <param name="overrideUiClassID"></param>
      <param name="dialogTitle"></param>
      <param name="hOwnerWnd"></param>
      <param name="buttonMode"></param>
      <param name="vbShowNoApplyToggle"></param>
      <param name="vbForceReadOnly"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.DestroyModeless">
      <summary>method DestroyModeless</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.IsWindowValid">
      <summary>method IsWindowValid</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.WindowHandle">
      <summary>method WindowHandle</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.ModalReturnCode">
      <summary>property ModalReturnCode</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.OnInitDialog">
      <summary>method OnInitDialog</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.OnPreApply">
      <summary>method OnPreApply</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.OnPostApply">
      <summary>method OnPostApply</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightUtilDialogClass.OnClose">
      <summary>method OnClose</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalog">
      <summary>AgUiFlightCatalog Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalog.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalog.ForeColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalog.TabStop">
      <summary />
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogClass">
      <summary>AgUiFlightCatalog Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogClass.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogClass.ForeColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogClass.TabStop">
      <summary />
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogPicker">
      <summary>AgUiFlightCatalogPicker Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogPicker.DoModal(AGI.AgFlight.IAgFlightCatalogCategory,System.String,AGI.AgFlight.IAgFlightCatalogPath)">
      <summary>method DoModal</summary>
      <param name="pCategory"></param>
      <param name="windowTitle"></param>
      <param name="pSelItem"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogPickerClass">
      <summary>AgUiFlightCatalogPicker Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogPickerClass.DoModal(AGI.AgFlight.IAgFlightCatalogCategory,System.String,AGI.AgFlight.IAgFlightCatalogPath)">
      <summary>method DoModal</summary>
      <param name="pCategory"></param>
      <param name="windowTitle"></param>
      <param name="pSelItem"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightDropEditValidateResult">
      <summary>AgUiFlightDropEditValidateResult Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightDropEditValidateResult.IsValid">
      <summary>property IsValid</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightDropEditValidateResult.ValidValue">
      <summary>property ValidValue</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightDropEditValidateResult.StatusMessage">
      <summary>property StatusMessage</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightDropEditValidateResultClass">
      <summary>AgUiFlightDropEditValidateResult Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightDropEditValidateResultClass.IsValid">
      <summary>property IsValid</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightDropEditValidateResultClass.ValidValue">
      <summary>property ValidValue</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightDropEditValidateResultClass.StatusMessage">
      <summary>property StatusMessage</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightDropEdit">
      <summary>AgUiFlightDropEdit Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.AttachEditMinMax(System.String,System.Int32,AGI.AgFlight.tagAgEFlightDimension,AGI.AgComUtilities.IAgValidateChildren,System.Double,System.Double)">
      <summary>method AttachEditMinMax</summary>
      <param name="prefsName"></param>
      <param name="ctrlHWnd"></param>
      <param name="dimType"></param>
      <param name="pWeakRefParent"></param>
      <param name="minVal"></param>
      <param name="maxVal"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.AttachEditValidate(System.String,System.Int32,AGI.AgFlight.tagAgEFlightDimension,AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble,AGI.AgComUtilities.IAgValidateChildren,System.Boolean)">
      <summary>method AttachEditValidate</summary>
      <param name="prefsName"></param>
      <param name="ctrlHWnd"></param>
      <param name="dimType"></param>
      <param name="pWeakRefValidate"></param>
      <param name="pWeakRefParent"></param>
      <param name="vbValidateOnKillFocus"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.SetDoubleValue(System.Double)">
      <summary>method SetDoubleValue</summary>
      <param name="internalValue"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.GetValidatedValue">
      <summary>method GetValidatedValue</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.GetCurrentUnit">
      <summary>method GetCurrentUnit</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.Validate(AGI.AgComUtilities.tagAgEControlValidationMode)">
      <summary>method Validate</summary>
      <param name="validationMode"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.Enable(System.Boolean)">
      <summary>method Enable</summary>
      <param name="vbEnable"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.SetReadOnly(System.Boolean)">
      <summary>method SetReadOnly</summary>
      <param name="vbReadOnly"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.SetErrorMsg(System.String)">
      <summary>method SetErrorMsg</summary>
      <param name="msg"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.SetInteger">
      <summary>method SetInteger</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.SetWindowText(System.String)">
      <summary>method SetWindowText</summary>
      <param name="windowText"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.ClearWindowText">
      <summary>method ClearWindowText</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.DetachDropEdit">
      <summary>method DetachDropEdit</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightDropEdit.IsValid">
      <summary>property IsValid</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass">
      <summary>AgUiFlightDropEdit Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.AttachEditMinMax(System.String,System.Int32,AGI.AgFlight.tagAgEFlightDimension,AGI.AgComUtilities.IAgValidateChildren,System.Double,System.Double)">
      <summary>method AttachEditMinMax</summary>
      <param name="prefsName"></param>
      <param name="ctrlHWnd"></param>
      <param name="dimType"></param>
      <param name="pWeakRefParent"></param>
      <param name="minVal"></param>
      <param name="maxVal"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.AttachEditValidate(System.String,System.Int32,AGI.AgFlight.tagAgEFlightDimension,AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble,AGI.AgComUtilities.IAgValidateChildren,System.Boolean)">
      <summary>method AttachEditValidate</summary>
      <param name="prefsName"></param>
      <param name="ctrlHWnd"></param>
      <param name="dimType"></param>
      <param name="pWeakRefValidate"></param>
      <param name="pWeakRefParent"></param>
      <param name="vbValidateOnKillFocus"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.SetDoubleValue(System.Double)">
      <summary>method SetDoubleValue</summary>
      <param name="internalValue"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.GetValidatedValue">
      <summary>method GetValidatedValue</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.GetCurrentUnit">
      <summary>method GetCurrentUnit</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.Validate(AGI.AgComUtilities.tagAgEControlValidationMode)">
      <summary>method Validate</summary>
      <param name="validationMode"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.Enable(System.Boolean)">
      <summary>method Enable</summary>
      <param name="vbEnable"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.SetReadOnly(System.Boolean)">
      <summary>method SetReadOnly</summary>
      <param name="vbReadOnly"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.SetErrorMsg(System.String)">
      <summary>method SetErrorMsg</summary>
      <param name="msg"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.SetInteger">
      <summary>method SetInteger</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.SetWindowText(System.String)">
      <summary>method SetWindowText</summary>
      <param name="windowText"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.ClearWindowText">
      <summary>method ClearWindowText</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.DetachDropEdit">
      <summary>method DetachDropEdit</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightDropEditClass.IsValid">
      <summary>property IsValid</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightAirspeed">
      <summary>AgUiFlightAirspeed Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.EnableWidgets(System.Boolean)">
      <summary>method EnableWidgets</summary>
      <param name="vbEnable"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.SetReadOnly(System.Boolean,System.Boolean)">
      <summary>method SetReadOnly</summary>
      <param name="readOnlyTFs"></param>
      <param name="readOnlyCombo"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.ShowWidgets(System.Boolean)">
      <summary>method ShowWidgets</summary>
      <param name="show"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.OnInitDialog(System.String,System.Int32,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren,AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble)">
      <summary>method OnInitDialog</summary>
      <param name="bstrUiName"></param>
      <param name="idEditAirspeed"></param>
      <param name="idEditMach"></param>
      <param name="idComboAirspeedType"></param>
      <param name="hWndParent"></param>
      <param name="pWeakRefParent"></param>
      <param name="pValidateDoubleOptional"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.OnInitDialogDotNET(System.String,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren,AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble)">
      <summary>method OnInitDialogDotNET</summary>
      <param name="bstrUiName"></param>
      <param name="hWndEditAirspeed"></param>
      <param name="hWndEditMach"></param>
      <param name="hWndComboAirspeedType"></param>
      <param name="pWeakRefParent"></param>
      <param name="pValidateDoubleOptional"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.Initialize(System.Double,System.Double,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,AGI.AgFlight.IAgFlightAtmosphereCalcData)">
      <summary>method Initialize</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
      <param name="eCurAirspeedType"></param>
      <param name="curAirspeed"></param>
      <param name="pAtmosCalcData"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.Initialize2(System.Double,System.Double,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,System.Double,AGI.AgFlight.IAgFlightAtmosphereCalcData)">
      <summary>method Initialize2</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
      <param name="eCurAirspeedType"></param>
      <param name="curAirspeed"></param>
      <param name="eMinMaxAirspeedType"></param>
      <param name="minAirspeed"></param>
      <param name="maxAirspeed"></param>
      <param name="pAtmosCalcData"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.UpdateAltitudes(System.Double,System.Double,System.Double)">
      <summary>method UpdateAltitudes</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.Update(System.Double,System.Double,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,System.Double)">
      <summary>method Update</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
      <param name="eMinMaxAirspeedType"></param>
      <param name="minAirspeed"></param>
      <param name="maxAirspeed"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.GetAirspeed(AGI.AgFlight.tagAgEFlightAirspeedType)">
      <summary>method GetAirspeed</summary>
      <param name="eAirspeedType"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.GetAirspeedAtAlt(System.Double,AGI.AgFlight.tagAgEFlightAirspeedType)">
      <summary>method GetAirspeedAtAlt</summary>
      <param name="dAltitude"></param>
      <param name="eAirspeedType"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.GetMaxVertRate(System.Double,System.Double)">
      <summary>property GetMaxVertRate</summary>
      <param name="minAlt"></param>
      <param name="maxAlt"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.UpdateVertRate(System.Double,System.Double,System.Double)">
      <summary>method UpdateVertRate</summary>
      <param name="minAlt"></param>
      <param name="maxAlt"></param>
      <param name="vertRate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.SetWindowText(System.String)">
      <summary>method SetWindowText</summary>
      <param name="windowText"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.ClearWindowText">
      <summary>method ClearWindowText</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.UpdateControls">
      <summary>method UpdateControls</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.AirspeedType">
      <summary>property AirspeedType</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightAirspeed.Airspeed">
      <summary>property Airspeed</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass">
      <summary>AgUiFlightAirspeed Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.EnableWidgets(System.Boolean)">
      <summary>method EnableWidgets</summary>
      <param name="vbEnable"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.SetReadOnly(System.Boolean,System.Boolean)">
      <summary>method SetReadOnly</summary>
      <param name="readOnlyTFs"></param>
      <param name="readOnlyCombo"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.ShowWidgets(System.Boolean)">
      <summary>method ShowWidgets</summary>
      <param name="show"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.OnInitDialog(System.String,System.Int32,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren,AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble)">
      <summary>method OnInitDialog</summary>
      <param name="bstrUiName"></param>
      <param name="idEditAirspeed"></param>
      <param name="idEditMach"></param>
      <param name="idComboAirspeedType"></param>
      <param name="hWndParent"></param>
      <param name="pWeakRefParent"></param>
      <param name="pValidateDoubleOptional"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.OnInitDialogDotNET(System.String,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren,AGI.AgUiFlightUtilities.IAgUiFlightDropEditValidateDouble)">
      <summary>method OnInitDialogDotNET</summary>
      <param name="bstrUiName"></param>
      <param name="hWndEditAirspeed"></param>
      <param name="hWndEditMach"></param>
      <param name="hWndComboAirspeedType"></param>
      <param name="pWeakRefParent"></param>
      <param name="pValidateDoubleOptional"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.Initialize(System.Double,System.Double,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,AGI.AgFlight.IAgFlightAtmosphereCalcData)">
      <summary>method Initialize</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
      <param name="eCurAirspeedType"></param>
      <param name="curAirspeed"></param>
      <param name="pAtmosCalcData"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.Initialize2(System.Double,System.Double,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,System.Double,AGI.AgFlight.IAgFlightAtmosphereCalcData)">
      <summary>method Initialize2</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
      <param name="eCurAirspeedType"></param>
      <param name="curAirspeed"></param>
      <param name="eMinMaxAirspeedType"></param>
      <param name="minAirspeed"></param>
      <param name="maxAirspeed"></param>
      <param name="pAtmosCalcData"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.UpdateAltitudes(System.Double,System.Double,System.Double)">
      <summary>method UpdateAltitudes</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.Update(System.Double,System.Double,System.Double,AGI.AgFlight.tagAgEFlightAirspeedType,System.Double,System.Double)">
      <summary>method Update</summary>
      <param name="minAltitude"></param>
      <param name="computeAltitude"></param>
      <param name="maxAltitude"></param>
      <param name="eMinMaxAirspeedType"></param>
      <param name="minAirspeed"></param>
      <param name="maxAirspeed"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.GetAirspeed(AGI.AgFlight.tagAgEFlightAirspeedType)">
      <summary>method GetAirspeed</summary>
      <param name="eAirspeedType"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.GetAirspeedAtAlt(System.Double,AGI.AgFlight.tagAgEFlightAirspeedType)">
      <summary>method GetAirspeedAtAlt</summary>
      <param name="dAltitude"></param>
      <param name="eAirspeedType"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.GetMaxVertRate(System.Double,System.Double)">
      <summary>property GetMaxVertRate</summary>
      <param name="minAlt"></param>
      <param name="maxAlt"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.UpdateVertRate(System.Double,System.Double,System.Double)">
      <summary>method UpdateVertRate</summary>
      <param name="minAlt"></param>
      <param name="maxAlt"></param>
      <param name="vertRate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.SetWindowText(System.String)">
      <summary>method SetWindowText</summary>
      <param name="windowText"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.ClearWindowText">
      <summary>method ClearWindowText</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.UpdateControls">
      <summary>method UpdateControls</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.AirspeedType">
      <summary>property AirspeedType</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.Airspeed">
      <summary>property Airspeed</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.DropEditValidateDouble(System.Int32,System.Int32,System.Double)">
      <summary>method DropEditValidateDouble</summary>
      <param name="ctrlHWnd"></param>
      <param name="ctrlID"></param>
      <param name="value"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedClass.DropEditPostValidate(System.Int32,System.Int32)">
      <summary>method DropEditPostValidate</summary>
      <param name="ctrlHWnd"></param>
      <param name="ctrlID"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeed">
      <summary>AgUiFlightCruiseAirspeed Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeed.EnableWidgets(System.Boolean)">
      <summary>method EnableWidgets</summary>
      <param name="vbEnable"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeed.OnInitDialog(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren)">
      <summary>method OnInitDialog</summary>
      <param name="bstrUiName"></param>
      <param name="idComboCruiseSpeed"></param>
      <param name="idEditAirspeed"></param>
      <param name="idEditMach"></param>
      <param name="idComboAirspeedType"></param>
      <param name="hWndParent"></param>
      <param name="pWeakRefParent"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeed.OnInitDialogDotNET(System.String,System.Int32,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren)">
      <summary>method OnInitDialogDotNET</summary>
      <param name="bstrUiName"></param>
      <param name="hWndComboCruiseSpeed"></param>
      <param name="hWndEditAirspeed"></param>
      <param name="hWndEditMach"></param>
      <param name="hWndComboAirspeedType"></param>
      <param name="pWeakRefParent"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeed.OnInitialize(AGI.AgFlight.tagAgEFlightCruiseAirspeedSource,System.Double,AGI.AgFlight.IAgFlightCruiseAirspeed,AGI.AgFlight.IAgFlightPerfModelCollection,AGI.AgFlight.IAgFlightAtmosphereCalcData,AGI.AgFlight.IAgFlightConfiguration,System.Boolean)">
      <summary>method OnInitialize</summary>
      <param name="eAirspeedSource"></param>
      <param name="dAltitude"></param>
      <param name="pCruiseAirspeed"></param>
      <param name="pAircraftProps"></param>
      <param name="pAtmosCalcData"></param>
      <param name="pConfig"></param>
      <param name="vbNoDurationCheck"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeed.OnApply">
      <summary>method OnApply</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeed.OnAltitudeChange(System.Double)">
      <summary>method OnAltitudeChange</summary>
      <param name="dAltitude"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeed.OnProfileAltitudeChange(AGI.AgFlight.IAgFlightProfileItem,System.Boolean)">
      <summary>method OnProfileAltitudeChange</summary>
      <param name="pProfileItem"></param>
      <param name="vbUseWindFrame"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeed.QueryCruiseAirspeed(AGI.AgFlight.IAgFlightCruiseAirspeed)">
      <summary>method QueryCruiseAirspeed</summary>
      <param name="pResultCruiseAirspeed"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass">
      <summary>AgUiFlightCruiseAirspeed Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass.EnableWidgets(System.Boolean)">
      <summary>method EnableWidgets</summary>
      <param name="vbEnable"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass.OnInitDialog(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren)">
      <summary>method OnInitDialog</summary>
      <param name="bstrUiName"></param>
      <param name="idComboCruiseSpeed"></param>
      <param name="idEditAirspeed"></param>
      <param name="idEditMach"></param>
      <param name="idComboAirspeedType"></param>
      <param name="hWndParent"></param>
      <param name="pWeakRefParent"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass.OnInitDialogDotNET(System.String,System.Int32,System.Int32,System.Int32,System.Int32,AGI.AgComUtilities.IAgValidateChildren)">
      <summary>method OnInitDialogDotNET</summary>
      <param name="bstrUiName"></param>
      <param name="hWndComboCruiseSpeed"></param>
      <param name="hWndEditAirspeed"></param>
      <param name="hWndEditMach"></param>
      <param name="hWndComboAirspeedType"></param>
      <param name="pWeakRefParent"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass.OnInitialize(AGI.AgFlight.tagAgEFlightCruiseAirspeedSource,System.Double,AGI.AgFlight.IAgFlightCruiseAirspeed,AGI.AgFlight.IAgFlightPerfModelCollection,AGI.AgFlight.IAgFlightAtmosphereCalcData,AGI.AgFlight.IAgFlightConfiguration,System.Boolean)">
      <summary>method OnInitialize</summary>
      <param name="eAirspeedSource"></param>
      <param name="dAltitude"></param>
      <param name="pCruiseAirspeed"></param>
      <param name="pAircraftProps"></param>
      <param name="pAtmosCalcData"></param>
      <param name="pConfig"></param>
      <param name="vbNoDurationCheck"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass.OnApply">
      <summary>method OnApply</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass.OnAltitudeChange(System.Double)">
      <summary>method OnAltitudeChange</summary>
      <param name="dAltitude"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass.OnProfileAltitudeChange(AGI.AgFlight.IAgFlightProfileItem,System.Boolean)">
      <summary>method OnProfileAltitudeChange</summary>
      <param name="pProfileItem"></param>
      <param name="vbUseWindFrame"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass.QueryCruiseAirspeed(AGI.AgFlight.IAgFlightCruiseAirspeed)">
      <summary>method QueryCruiseAirspeed</summary>
      <param name="pResultCruiseAirspeed"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass.DropEditValidateDouble(System.Int32,System.Int32,System.Double)">
      <summary>method DropEditValidateDouble</summary>
      <param name="ctrlHWnd"></param>
      <param name="ctrlID"></param>
      <param name="value"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCruiseAirspeedClass.DropEditPostValidate(System.Int32,System.Int32)">
      <summary>method DropEditPostValidate</summary>
      <param name="ctrlHWnd"></param>
      <param name="ctrlID"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightNewProcedure">
      <summary>AgUiFlightNewProcedure Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightNewProcedure.DoModal(AGI.AgFlight.IAgFlightMissionPhase,AGI.AgFlight.IAgFlightProcedure)">
      <summary>method DoModal</summary>
      <param name="pMissionPhase"></param>
      <param name="pPrevProcedure"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightNewProcedure.Procedure">
      <summary>property Procedure</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightNewProcedure.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightNewProcedureClass">
      <summary>AgUiFlightNewProcedure Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightNewProcedureClass.DoModal(AGI.AgFlight.IAgFlightMissionPhase,AGI.AgFlight.IAgFlightProcedure)">
      <summary>method DoModal</summary>
      <param name="pMissionPhase"></param>
      <param name="pPrevProcedure"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightNewProcedureClass.Procedure">
      <summary>property Procedure</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightNewProcedureClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightSiteDialog">
      <summary>AgUiFlightSiteDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSiteDialog.DoModal(AGI.AgFlight.IAgFlightMissionPhase,AGI.AgFlight.IAgFlightProcedure)">
      <summary>method DoModal</summary>
      <param name="pPhase"></param>
      <param name="pPrevProc"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSiteDialog.Site">
      <summary>property Site</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightSiteDialogClass">
      <summary>AgUiFlightSiteDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSiteDialogClass.DoModal(AGI.AgFlight.IAgFlightMissionPhase,AGI.AgFlight.IAgFlightProcedure)">
      <summary>method DoModal</summary>
      <param name="pPhase"></param>
      <param name="pPrevProc"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSiteDialogClass.Site">
      <summary>property Site</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureDialog">
      <summary>AgUiFlightProcedureDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureDialog.DoModal(AGI.AgFlight.IAgFlightMissionPhase,AGI.AgFlight.IAgFlightProcedure,System.Object)">
      <summary>method DoModal</summary>
      <param name="pPhase"></param>
      <param name="pPrevProc"></param>
      <param name="pUnkSite"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureDialog.Procedure">
      <summary>property Procedure</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureDialogClass">
      <summary>AgUiFlightProcedureDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureDialogClass.DoModal(AGI.AgFlight.IAgFlightMissionPhase,AGI.AgFlight.IAgFlightProcedure,System.Object)">
      <summary>method DoModal</summary>
      <param name="pPhase"></param>
      <param name="pPrevProc"></param>
      <param name="pUnkSite"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureDialogClass.Procedure">
      <summary>property Procedure</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightConfigurationDialog">
      <summary>AgUiFlightConfigurationDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightConfigurationDialog.DoModal(System.Int32,AGI.AgFlight.IAgFlightConfiguration,AGI.AgFlight.IAgFlightAircraft,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="accessKey"></param>
      <param name="pConfig"></param>
      <param name="pAircraft"></param>
      <param name="vbReadOnly"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightConfigurationDialog.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightConfigurationDialogClass">
      <summary>AgUiFlightConfigurationDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightConfigurationDialogClass.DoModal(System.Int32,AGI.AgFlight.IAgFlightConfiguration,AGI.AgFlight.IAgFlightAircraft,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="accessKey"></param>
      <param name="pConfig"></param>
      <param name="pAircraft"></param>
      <param name="vbReadOnly"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightConfigurationDialogClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvert">
      <summary>AgUiFlightAirspeedConvert Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvert.SetAltitude(System.Double,System.Boolean,System.Double,System.Double,AGI.AgFlight.IAgFlightAtmosphereCalcData)">
      <summary>method SetAltitude</summary>
      <param name="alt"></param>
      <param name="vbAllowChange"></param>
      <param name="min"></param>
      <param name="max"></param>
      <param name="pAtmosCalcData"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvert.SetTAS(System.Double,System.Double,System.Double)">
      <summary>method SetTAS</summary>
      <param name="TAS"></param>
      <param name="min"></param>
      <param name="max"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvert.DoModal(System.String)">
      <summary>method DoModal</summary>
      <param name="strCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvert.Altitude">
      <summary>property Altitude</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvert.TAS">
      <summary>property TAS</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvertClass">
      <summary>AgUiFlightAirspeedConvert Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvertClass.SetAltitude(System.Double,System.Boolean,System.Double,System.Double,AGI.AgFlight.IAgFlightAtmosphereCalcData)">
      <summary>method SetAltitude</summary>
      <param name="alt"></param>
      <param name="vbAllowChange"></param>
      <param name="min"></param>
      <param name="max"></param>
      <param name="pAtmosCalcData"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvertClass.SetTAS(System.Double,System.Double,System.Double)">
      <summary>method SetTAS</summary>
      <param name="TAS"></param>
      <param name="min"></param>
      <param name="max"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvertClass.DoModal(System.String)">
      <summary>method DoModal</summary>
      <param name="strCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvertClass.Altitude">
      <summary>property Altitude</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightAirspeedConvertClass.TAS">
      <summary>property TAS</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProfileItem">
      <summary>AgUiFlightProfileItem Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProfileItem.DoModal(AGI.AgFlight.IAgFlightProfileItem,AGI.AgFlight.IAgFlightAtmosphereCalcData,System.String,AGI.AgFlight.tagAgEFlightAirspeedType,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pItem"></param>
      <param name="pAtmosCalcData"></param>
      <param name="windowCaption"></param>
      <param name="eAirspeedType"></param>
      <param name="vbReadOnly"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProfileItemClass">
      <summary>AgUiFlightProfileItem Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProfileItemClass.DoModal(AGI.AgFlight.IAgFlightProfileItem,AGI.AgFlight.IAgFlightAtmosphereCalcData,System.String,AGI.AgFlight.tagAgEFlightAirspeedType,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pItem"></param>
      <param name="pAtmosCalcData"></param>
      <param name="windowCaption"></param>
      <param name="eAirspeedType"></param>
      <param name="vbReadOnly"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightThrustPowerRequired">
      <summary>AgUiFlightThrustPowerRequired Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightThrustPowerRequired.DoModal(System.String,AGI.AgFlight.IAgFlightAeroStrategy,AGI.AgFlight.IAgFlightAircraft,AGI.AgFlight.IAgFlightPropulsionCalculator,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="strCaption"></param>
      <param name="pAero"></param>
      <param name="pAircraft"></param>
      <param name="pCalc"></param>
      <param name="vbShowSeaLevelEquivToggle"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightThrustPowerRequired.GetComputedThrust">
      <summary>method GetComputedThrust</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightThrustPowerRequired.GetComputedPower">
      <summary>method GetComputedPower</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightThrustPowerRequiredClass">
      <summary>AgUiFlightThrustPowerRequired Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightThrustPowerRequiredClass.DoModal(System.String,AGI.AgFlight.IAgFlightAeroStrategy,AGI.AgFlight.IAgFlightAircraft,AGI.AgFlight.IAgFlightPropulsionCalculator,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="strCaption"></param>
      <param name="pAero"></param>
      <param name="pAircraft"></param>
      <param name="pCalc"></param>
      <param name="vbShowSeaLevelEquivToggle"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightThrustPowerRequiredClass.GetComputedThrust">
      <summary>method GetComputedThrust</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightThrustPowerRequiredClass.GetComputedPower">
      <summary>method GetComputedPower</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightMenuSeparator">
      <summary>AgUiFlightMenuSeparator Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuSeparator.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightMenuSeparatorClass">
      <summary>AgUiFlightMenuSeparator Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuSeparatorClass.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightMenuCommand">
      <summary>AgUiFlightMenuCommand Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuCommand.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightMenuCommandClass">
      <summary>AgUiFlightMenuCommand Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuCommandClass.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMenuCommandClass.OnClick">
      <summary>method OnClick</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuCommandClass.Name">
      <summary>property Name</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuCommandClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuCommandClass.Enabled">
      <summary>property Enabled</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMenuCommandClass.SetOnClick(System.Int32,System.Int32)">
      <summary>method SetOnClick</summary>
      <param name="parentHWnd"></param>
      <param name="commandID"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightMenuParent">
      <summary>AgUiFlightMenuParent Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuParent.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightMenuParentClass">
      <summary>AgUiFlightMenuParent Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuParentClass.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMenuParentClass.InsertMenu(System.Int32,AGI.AgUiFlightUtilities.IAgUiFlightMenu)">
      <summary>method InsertMenu</summary>
      <param name="index"></param>
      <param name="pMenu"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMenuParentClass.Terminate">
      <summary>method Terminate</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuParentClass.Name">
      <summary>property Name</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuParentClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuParentClass.Enabled">
      <summary>property Enabled</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuParentClass.Count">
      <summary>property Count</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMenuParentClass.Menu">
      <summary>property Menu</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightWindowStack">
      <summary>AgUiFlightWindowStack Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightWindowStack.SetAppWindow(System.Int32)">
      <summary>method SetAppWindow</summary>
      <param name="newVal"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightWindowStack.PopCurrentWindow">
      <summary>method PopCurrentWindow</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightWindowStack.PushCurrentWindow(System.Int32)">
      <summary>method PushCurrentWindow</summary>
      <param name="newVal"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightWindowStack.CurrentWindow">
      <summary>property CurrentWindow</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightWindowStack.AppWindow">
      <summary>property AppWindow</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightWindowStackClass">
      <summary>AgUiFlightWindowStack Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightWindowStackClass.SetAppWindow(System.Int32)">
      <summary>method SetAppWindow</summary>
      <param name="newVal"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightWindowStackClass.PopCurrentWindow">
      <summary>method PopCurrentWindow</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightWindowStackClass.PushCurrentWindow(System.Int32)">
      <summary>method PushCurrentWindow</summary>
      <param name="newVal"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightWindowStackClass.CurrentWindow">
      <summary>property CurrentWindow</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightWindowStackClass.AppWindow">
      <summary>property AppWindow</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightTerrainBrowse">
      <summary>AgUiFlightTerrainBrowse Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightTerrainBrowse.BrowseForTerrainItem">
      <summary>method BrowseForTerrainItem</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightTerrainBrowseClass">
      <summary>AgUiFlightTerrainBrowse Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightTerrainBrowseClass.BrowseForTerrainItem">
      <summary>method BrowseForTerrainItem</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightAircraftDialog">
      <summary>AgUiFlightAircraftDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAircraftDialog.DoModal(AGI.AgFlight.IAgFlightAircraft)">
      <summary>method DoModal</summary>
      <param name="pACModels"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightAircraftDialogClass">
      <summary>AgUiFlightAircraftDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightAircraftDialogClass.DoModal(AGI.AgFlight.IAgFlightAircraft)">
      <summary>method DoModal</summary>
      <param name="pACModels"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightApplication">
      <summary>AgUiFlightApplication Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplication.GetUICLSID(System.Object,System.String,AGI.AgUiFlightUtilities.IAgUiFlightUIFactory*@)">
      <summary>method GetUICLSID</summary>
      <param name="pObj"></param>
      <param name="bstrContainerCLSID"></param>
      <param name="ppFactory"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplication.AddUIFactory(AGI.AgUiFlightUtilities.IAgUiFlightUIFactory)">
      <summary>method AddUIFactory</summary>
      <param name="pFactory"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplication.ClearUIFactories">
      <summary>method ClearUIFactories</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplication.InitPluginFactories">
      <summary>method InitPluginFactories</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplication.AddApplyButtonClient(AGI.AgUiFlightUtilities.IAgUiFlightApplyButtonClient)">
      <summary>method AddApplyButtonClient</summary>
      <param name="pApplyButtonClient"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplication.RemoveApplyButtonClient(AGI.AgUiFlightUtilities.IAgUiFlightApplyButtonClient)">
      <summary>method RemoveApplyButtonClient</summary>
      <param name="pApplyButtonClient"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplication.Shutdown">
      <summary>method Shutdown</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightApplication.ApplyButtonClients">
      <summary>property ApplyButtonClients</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightApplicationClass">
      <summary>AgUiFlightApplication Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplicationClass.GetUICLSID(System.Object,System.String,AGI.AgUiFlightUtilities.IAgUiFlightUIFactory*@)">
      <summary>method GetUICLSID</summary>
      <param name="pObj"></param>
      <param name="bstrContainerCLSID"></param>
      <param name="ppFactory"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplicationClass.AddUIFactory(AGI.AgUiFlightUtilities.IAgUiFlightUIFactory)">
      <summary>method AddUIFactory</summary>
      <param name="pFactory"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplicationClass.ClearUIFactories">
      <summary>method ClearUIFactories</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplicationClass.InitPluginFactories">
      <summary>method InitPluginFactories</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplicationClass.AddApplyButtonClient(AGI.AgUiFlightUtilities.IAgUiFlightApplyButtonClient)">
      <summary>method AddApplyButtonClient</summary>
      <param name="pApplyButtonClient"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplicationClass.RemoveApplyButtonClient(AGI.AgUiFlightUtilities.IAgUiFlightApplyButtonClient)">
      <summary>method RemoveApplyButtonClient</summary>
      <param name="pApplyButtonClient"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightApplicationClass.Shutdown">
      <summary>method Shutdown</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightApplicationClass.ApplyButtonClients">
      <summary>property ApplyButtonClients</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightSiteProcedure">
      <summary>AgUiFlightSiteProcedure Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSiteProcedure.DoModal(AGI.AgFlight.IAgFlightProcedure)">
      <summary>method DoModal</summary>
      <param name="pProcedure"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightSiteProcedureClass">
      <summary>AgUiFlightSiteProcedure Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSiteProcedureClass.DoModal(AGI.AgFlight.IAgFlightProcedure)">
      <summary>method DoModal</summary>
      <param name="pProcedure"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightWindAtmosphereDialog">
      <summary>AgUiFlightWindAtmosphereDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightWindAtmosphereDialog.DoModal(System.Object,System.String)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionOrProc"></param>
      <param name="strCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightWindAtmosphereDialog.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightWindAtmosphereDialogClass">
      <summary>AgUiFlightWindAtmosphereDialog Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightWindAtmosphereDialogClass.DoModal(System.Object,System.String)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionOrProc"></param>
      <param name="strCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightWindAtmosphereDialogClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogQuery">
      <summary>AgUiFlightCatalogQuery Class</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogQueryClass">
      <summary>AgUiFlightCatalogQuery Class</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightSpatialQueryRegistry">
      <summary>AgUiFlightSpatialQueryRegistry Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSpatialQueryRegistry.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSpatialQueryRegistry.ForeColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSpatialQueryRegistry.TabStop">
      <summary />
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightSpatialQueryRegistryClass">
      <summary>AgUiFlightSpatialQueryRegistry Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSpatialQueryRegistryClass.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSpatialQueryRegistryClass.ForeColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSpatialQueryRegistryClass.TabStop">
      <summary />
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightEvents">
      <summary>AgUiFlightEvents Class</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.IAgUiFlightEvents_Event.Terminate">
      <summary>method Terminate</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.IAgUiFlightEvents_Event.FireOnNewProcedure">
      <summary>method FireOnNewProcedure</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightEventsEvents_Event.OnNewProcedure">
      <summary>method OnNewProcedure</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightEventsClass">
      <summary>AgUiFlightEvents Class</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightEventsClass.Terminate">
      <summary>method Terminate</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightEventsClass.FireOnNewProcedure">
      <summary>method FireOnNewProcedure</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightEventsClass.OnNewProcedure">
      <summary>method OnNewProcedure</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogManagerSMI">
      <summary>AgUiFlightCatalogManagerSMI Class</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogManagerSMIClass">
      <summary>AgUiFlightCatalogManagerSMI Class</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities._IAgUiFlightCatalogTreeControlEvents">
      <summary>_IAgUiFlightCatalogTreeControlEvents Interface</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightCatalogTreeControlEvents.SelectionChanged(System.Boolean)">
      <summary>method SelectionChanged</summary>
      <param name="vbPromptForChange"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightCatalogTreeControlEvents.SelectionDblClk">
      <summary>method SelectionDblClk</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities._IAgUiFlightCatalogTreeControlEvents.SelectionSave">
      <summary>method SelectionSave</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl">
      <summary>AgUiFlightCatalogTreeControl Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.GetSelItem">
      <summary></summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.FilterCategory(AGI.AgFlight.IAgFlightCatalogCategory,System.Boolean)">
      <summary></summary>
      <param name="pCatInfo"></param>
      <param name="vbUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.SelectItem(AGI.AgFlight.IAgFlightCatalogCategory,AGI.AgFlight.IAgFlightCatalogPath)">
      <summary></summary>
      <param name="pBranchCatInfo"></param>
      <param name="pPathToItem"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.SetMaxTreeDepth(System.Int32,System.Boolean)">
      <summary></summary>
      <param name="maxTreeDepth"></param>
      <param name="vbUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.Reset(System.Boolean)">
      <summary></summary>
      <param name="vbResetCurSelection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.GetSelItemPath(AGI.AgFlight.IAgFlightCatalogCategory*@,AGI.AgFlight.IAgFlightCatalogPath*@)">
      <summary></summary>
      <param name="ppSelCategory"></param>
      <param name="ppSelPath"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.UpdateAllTrees(System.Boolean)">
      <summary></summary>
      <param name="vbExceptThis"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.AllTreesReleaseAllData">
      <summary></summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.ExpandTree">
      <summary></summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.FilterAndSelect(System.String)">
      <summary></summary>
      <param name="bstrName"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.ForeColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.TabStop">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.Caption">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.ShowPropButton">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.ShowNewButton">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.ContainerCLSID">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControl.FocusTreeControl">
      <summary />
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightCatalogTreeControlEvents_Event.SelectionChanged">
      <summary>method SelectionChanged</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightCatalogTreeControlEvents_Event.SelectionDblClk">
      <summary>method SelectionDblClk</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightCatalogTreeControlEvents_Event.SelectionSave">
      <summary>method SelectionSave</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass">
      <summary>AgUiFlightCatalogTreeControl Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.GetSelItem">
      <summary></summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.FilterCategory(AGI.AgFlight.IAgFlightCatalogCategory,System.Boolean)">
      <summary></summary>
      <param name="pCatInfo"></param>
      <param name="vbUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.SelectItem(AGI.AgFlight.IAgFlightCatalogCategory,AGI.AgFlight.IAgFlightCatalogPath)">
      <summary></summary>
      <param name="pBranchCatInfo"></param>
      <param name="pPathToItem"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.SetMaxTreeDepth(System.Int32,System.Boolean)">
      <summary></summary>
      <param name="maxTreeDepth"></param>
      <param name="vbUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.Reset(System.Boolean)">
      <summary></summary>
      <param name="vbResetCurSelection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.GetSelItemPath(AGI.AgFlight.IAgFlightCatalogCategory*@,AGI.AgFlight.IAgFlightCatalogPath*@)">
      <summary></summary>
      <param name="ppSelCategory"></param>
      <param name="ppSelPath"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.UpdateAllTrees(System.Boolean)">
      <summary></summary>
      <param name="vbExceptThis"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.AllTreesReleaseAllData">
      <summary></summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.ExpandTree">
      <summary></summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.FilterAndSelect(System.String)">
      <summary></summary>
      <param name="bstrName"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.ForeColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.TabStop">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.Caption">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.ShowPropButton">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.ShowNewButton">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.ContainerCLSID">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.FocusTreeControl">
      <summary />
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.SelectionChanged">
      <summary>method SelectionChanged</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.SelectionDblClk">
      <summary>method SelectionDblClk</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightCatalogTreeControlClass.SelectionSave">
      <summary>method SelectionSave</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTree">
      <summary>AGI AgUiFlightPerfModelTree Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTree.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTree.Enabled">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTree.TabStop">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTree.Caption">
      <summary />
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightPerfModelTreeEvents_Event.SelectionChanged">
      <summary>method SelectionChanged</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightPerfModelTreeEvents_Event.SelectionRenamed">
      <summary>method SelectionRenamed</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightPerfModelTreeEvents_Event.SelectionDeleted">
      <summary>method SelectionDeleted</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass">
      <summary>AGI AgUiFlightPerfModelTree Class</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.BackColor">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.Enabled">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.TabStop">
      <summary />
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.Caption">
      <summary />
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.SelectionChanged">
      <summary>method SelectionChanged</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.SelectionRenamed">
      <summary>method SelectionRenamed</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.SelectionDeleted">
      <summary>method SelectionDeleted</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.SelectItem(System.String,System.String)">
      <summary>method SelectItem</summary>
      <param name="strModelType"></param>
      <param name="strModelName"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.UpdateAllTrees(System.Boolean)">
      <summary>method UpdateAllTrees</summary>
      <param name="vbAllExceptThis"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.Aircraft">
      <summary>property Aircraft</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.AircraftProperties">
      <summary>property AircraftProperties</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.SingleChoiceMode">
      <summary>property SingleChoiceMode</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightPerfModelTreeClass.AircraftPropertiesMode">
      <summary>property AircraftPropertiesMode</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient">
      <summary>AgUiFlightLiftCoefficient Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.SetValues(AGI.AgFlight.IAgFlightAtmosphereCalcData,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>method SetValues</summary>
      <param name="pAtmosCalcData"></param>
      <param name="vbCompressibleFlow"></param>
      <param name="dSref"></param>
      <param name="dWeight1"></param>
      <param name="dWeight2"></param>
      <param name="dAlt1"></param>
      <param name="dAlt2"></param>
      <param name="dTAS1"></param>
      <param name="dTAS2"></param>
      <param name="dAOA1"></param>
      <param name="dAOA2"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.DoModal(System.String)">
      <summary>method DoModal</summary>
      <param name="strCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.CompressibleFlow">
      <summary>property CompressibleFlow</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.S">
      <summary>property S</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.Cl0">
      <summary>property Cl0</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.ClAlpha">
      <summary>property ClAlpha</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.Weight1">
      <summary>property Weight1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.Weight2">
      <summary>property Weight2</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.Alt1">
      <summary>property Alt1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.Alt2">
      <summary>property Alt2</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.TAS1">
      <summary>property TAS1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.TAS2">
      <summary>property TAS2</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.AOA1">
      <summary>property AOA1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficient.AOA2">
      <summary>property AOA2</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass">
      <summary>AgUiFlightLiftCoefficient Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.SetValues(AGI.AgFlight.IAgFlightAtmosphereCalcData,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>method SetValues</summary>
      <param name="pAtmosCalcData"></param>
      <param name="vbCompressibleFlow"></param>
      <param name="dSref"></param>
      <param name="dWeight1"></param>
      <param name="dWeight2"></param>
      <param name="dAlt1"></param>
      <param name="dAlt2"></param>
      <param name="dTAS1"></param>
      <param name="dTAS2"></param>
      <param name="dAOA1"></param>
      <param name="dAOA2"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.DoModal(System.String)">
      <summary>method DoModal</summary>
      <param name="strCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.CompressibleFlow">
      <summary>property CompressibleFlow</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.S">
      <summary>property S</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.Cl0">
      <summary>property Cl0</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.ClAlpha">
      <summary>property ClAlpha</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.Weight1">
      <summary>property Weight1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.Weight2">
      <summary>property Weight2</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.Alt1">
      <summary>property Alt1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.Alt2">
      <summary>property Alt2</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.TAS1">
      <summary>property TAS1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.TAS2">
      <summary>property TAS2</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.AOA1">
      <summary>property AOA1</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightLiftCoefficientClass.AOA2">
      <summary>property AOA2</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightSetProcTime">
      <summary>AgUiFlightSetProcTime Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSetProcTime.DoModal(AGI.AgFlight.IAgFlightMission,AGI.AgFlight.IAgFlightProcedureTimeInfo,System.String)">
      <summary>method DoModal</summary>
      <param name="pMission"></param>
      <param name="pTimeInfo"></param>
      <param name="windowCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSetProcTime.Icon">
      <summary>method Icon</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightSetProcTimeEvents_Event.OnMissionCalcInterrupt">
      <summary>method OnMissionCalcInterrupt</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities._IAgUiFlightSetProcTimeEvents_Event.OnApply">
      <summary>method OnPreApply</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightSetProcTimeClass">
      <summary>AgUiFlightSetProcTime Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSetProcTimeClass.DoModal(AGI.AgFlight.IAgFlightMission,AGI.AgFlight.IAgFlightProcedureTimeInfo,System.String)">
      <summary>method DoModal</summary>
      <param name="pMission"></param>
      <param name="pTimeInfo"></param>
      <param name="windowCaption"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSetProcTimeClass.Icon">
      <summary>method Icon</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightSetProcTimeClass.OnMissionCalcInterrupt">
      <summary>method OnMissionCalcInterrupt</summary>
    </member>
    <member name="E:AGI.AgUiFlightUtilities.AgUiFlightSetProcTimeClass.OnApply">
      <summary>method OnPreApply</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManager">
      <summary>AgUiFlightMissionCalcManager Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManager.SetParentWindow(System.Int32)">
      <summary>method SetParentWindow</summary>
      <param name="parentHWnd"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManager.ComputeMission(AGI.AgFlight.IAgFlightMission,System.Boolean)">
      <summary>method ComputeMission</summary>
      <param name="pMission"></param>
      <param name="vbSendNtfUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManager.SendNtfUpdate(System.Object)">
      <summary>method SendNtfUpdate</summary>
      <param name="pUnk"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManager.ComputeAllMissions(System.Boolean)">
      <summary>method ComputeAllMissions</summary>
      <param name="vbSendNtfUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManager.IgnoreUpdate(System.Boolean)">
      <summary>method IgnoreUpdate</summary>
      <param name="vbIgnoreUpdates"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManager.Start">
      <summary>method Start</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManager.Stop">
      <summary>method Stop</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManagerClass">
      <summary>AgUiFlightMissionCalcManager Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManagerClass.SetParentWindow(System.Int32)">
      <summary>method SetParentWindow</summary>
      <param name="parentHWnd"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManagerClass.ComputeMission(AGI.AgFlight.IAgFlightMission,System.Boolean)">
      <summary>method ComputeMission</summary>
      <param name="pMission"></param>
      <param name="vbSendNtfUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManagerClass.SendNtfUpdate(System.Object)">
      <summary>method SendNtfUpdate</summary>
      <param name="pUnk"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManagerClass.ComputeAllMissions(System.Boolean)">
      <summary>method ComputeAllMissions</summary>
      <param name="vbSendNtfUpdate"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManagerClass.IgnoreUpdate(System.Boolean)">
      <summary>method IgnoreUpdate</summary>
      <param name="vbIgnoreUpdates"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManagerClass.Start">
      <summary>method Start</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMissionCalcManagerClass.Stop">
      <summary>method Stop</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCalcProgress">
      <summary>AgUiFlightCalcProgress Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCalcProgress.SetParentWindow(System.Int32)">
      <summary>method SetParentWindow</summary>
      <param name="parentHWnd"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCalcProgress.SetCaption(System.String)">
      <summary>method SetCaption</summary>
      <param name="strCaption"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCalcProgress.SetInitialDelay(System.Double)">
      <summary>method SetInitialDelay</summary>
      <param name="delayInSec"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCalcProgress.DestroyWindow">
      <summary>method DestroyWindow</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCalcProgressClass">
      <summary>AgUiFlightCalcProgress Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCalcProgressClass.SetParentWindow(System.Int32)">
      <summary>method SetParentWindow</summary>
      <param name="parentHWnd"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCalcProgressClass.SetCaption(System.String)">
      <summary>method SetCaption</summary>
      <param name="strCaption"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCalcProgressClass.SetInitialDelay(System.Double)">
      <summary>method SetInitialDelay</summary>
      <param name="delayInSec"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCalcProgressClass.DestroyWindow">
      <summary>method DestroyWindow</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcCalcOptions">
      <summary>AgUiFlightProcCalcOptions Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcCalcOptions.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pProcsPhaseMission"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcCalcOptions.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcCalcOptionsClass">
      <summary>AgUiFlightProcCalcOptions Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcCalcOptionsClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pProcsPhaseMission"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcCalcOptionsClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureCruiseAltitude">
      <summary>AgUiFlightProcedureCruiseAltitude Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureCruiseAltitude.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureCruiseAltitude.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureCruiseAltitude.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureCruiseAltitudeClass">
      <summary>AgUiFlightProcedureCruiseAltitude Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureCruiseAltitudeClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureCruiseAltitudeClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureCruiseAltitudeClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteCruiseAirspeed">
      <summary>AgUiFlightProcedureEnrouteCruiseAirspeed Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteCruiseAirspeed.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteCruiseAirspeed.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteCruiseAirspeed.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteCruiseAirspeedClass">
      <summary>AgUiFlightProcedureEnrouteCruiseAirspeed Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteCruiseAirspeedClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteCruiseAirspeedClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteCruiseAirspeedClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureSecondCruiseAirspeed">
      <summary>AgUiFlightProcedureSecondCruiseAirspeed Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureSecondCruiseAirspeed.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureSecondCruiseAirspeed.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureSecondCruiseAirspeed.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureSecondCruiseAirspeedClass">
      <summary>AgUiFlightProcedureSecondCruiseAirspeed Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureSecondCruiseAirspeedClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureSecondCruiseAirspeedClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureSecondCruiseAirspeedClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactor">
      <summary>AgUiFlightProcedureTurnRadiusFactor Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactor.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactor.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactor.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactorClass">
      <summary>AgUiFlightProcedureTurnRadiusFactor Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactorClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactorClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactorClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureMaxSpeedTurns">
      <summary>AgUiFlightProcedureMaxSpeedTurns Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureMaxSpeedTurns.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureMaxSpeedTurns.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureMaxSpeedTurns.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureMaxSpeedTurnsClass">
      <summary>AgUiFlightProcedureMaxSpeedTurns Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureMaxSpeedTurnsClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureMaxSpeedTurnsClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureMaxSpeedTurnsClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypoint">
      <summary>AgUiFlightMoveWaypoint Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypoint.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypoint.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypoint.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypointClass">
      <summary>AgUiFlightMoveWaypoint Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypointClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypointClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypointClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypointClass.AddMenu(AGI.AgFlight.IAgFlightMission,System.Object)">
      <summary>method AddMenu</summary>
      <param name="pMission"></param>
      <param name="pSelection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypointClass.OnClick">
      <summary>method OnClick</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypointClass.Name">
      <summary>property Name</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypointClass.Enabled">
      <summary>property Enabled</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightMoveWaypointClass.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcType">
      <summary>AgUiFlightSwitchP2PProcType Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcType.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcType.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcType.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcTypeClass">
      <summary>AgUiFlightSwitchP2PProcType Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcTypeClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcTypeClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcTypeClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcTypeClass.AddMenu(AGI.AgFlight.IAgFlightMission,System.Object)">
      <summary>method AddMenu</summary>
      <param name="pMission"></param>
      <param name="pSelection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcTypeClass.OnClick">
      <summary>method OnClick</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcTypeClass.Name">
      <summary>property Name</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcTypeClass.Enabled">
      <summary>property Enabled</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightSwitchP2PProcTypeClass.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrder">
      <summary>AgUiFlightReverseProcedureOrder Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrder.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrder.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrder.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrderClass">
      <summary>AgUiFlightReverseProcedureOrder Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrderClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrderClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrderClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrderClass.AddMenu(AGI.AgFlight.IAgFlightMission,System.Object)">
      <summary>method AddMenu</summary>
      <param name="pMission"></param>
      <param name="pSelection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrderClass.OnClick">
      <summary>method OnClick</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrderClass.Name">
      <summary>property Name</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrderClass.Enabled">
      <summary>property Enabled</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightReverseProcedureOrderClass.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureCourseHeadingOptions">
      <summary>AgUiFlightProcedureCourseHeadingOptions Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureCourseHeadingOptions.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureCourseHeadingOptions.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureCourseHeadingOptions.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureCourseHeadingOptionsClass">
      <summary>AgUiFlightProcedureCourseHeadingOptions Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureCourseHeadingOptionsClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureCourseHeadingOptionsClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureCourseHeadingOptionsClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteTurnDir">
      <summary>AgUiFlightProcedureEnrouteTurnDir Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteTurnDir.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteTurnDir.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteTurnDir.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteTurnDirClass">
      <summary>AgUiFlightProcedureEnrouteTurnDir Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteTurnDirClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteTurnDirClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureEnrouteTurnDirClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureDelayEnrouteClimbDescents">
      <summary>AgUiFlightProcedureDelayEnrouteClimbDescents Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureDelayEnrouteClimbDescents.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureDelayEnrouteClimbDescents.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureDelayEnrouteClimbDescents.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureDelayEnrouteClimbDescentsClass">
      <summary>AgUiFlightProcedureDelayEnrouteClimbDescents Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureDelayEnrouteClimbDescentsClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureDelayEnrouteClimbDescentsClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureDelayEnrouteClimbDescentsClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureFlyCruiseAirspeedProfile">
      <summary>AgUiFlightProcedureFlyCruiseAirspeedProfile Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureFlyCruiseAirspeedProfile.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureFlyCruiseAirspeedProfile.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureFlyCruiseAirspeedProfile.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureFlyCruiseAirspeedProfileClass">
      <summary>AgUiFlightProcedureFlyCruiseAirspeedProfile Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureFlyCruiseAirspeedProfileClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureFlyCruiseAirspeedProfileClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureFlyCruiseAirspeedProfileClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureAGLMSLAltitude">
      <summary>AgUiFlightProcedureAGLMSLAltitude Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureAGLMSLAltitude.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureAGLMSLAltitude.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureAGLMSLAltitude.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureAGLMSLAltitudeClass">
      <summary>AgUiFlightProcedureAGLMSLAltitude Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureAGLMSLAltitudeClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureAGLMSLAltitudeClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureAGLMSLAltitudeClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureVertPlaneOptions">
      <summary>AgUiFlightProcedureVertPlaneOptions Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureVertPlaneOptions.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureVertPlaneOptions.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureVertPlaneOptions.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureVertPlaneOptionsClass">
      <summary>AgUiFlightProcedureVertPlaneOptions Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureVertPlaneOptionsClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureVertPlaneOptionsClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureVertPlaneOptionsClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureWindAtmosphereModels">
      <summary>AgUiFlightProcedureWindAtmosphereModels Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureWindAtmosphereModels.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureWindAtmosphereModels.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureWindAtmosphereModels.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureWindAtmosphereModelsClass">
      <summary>AgUiFlightProcedureWindAtmosphereModels Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureWindAtmosphereModelsClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureWindAtmosphereModelsClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureWindAtmosphereModelsClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureTimeDuration">
      <summary>AgUiFlightProcedureTimeDuration Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureTimeDuration.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureTimeDuration.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureTimeDuration.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureTimeDurationClass">
      <summary>AgUiFlightProcedureTimeDuration Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureTimeDurationClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureTimeDurationClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcedureTimeDurationClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSize">
      <summary>AgUiFlightCatalogMgrSize Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSize.SetSize(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>method SetSize</summary>
      <param name="vbParentPosValid"></param>
      <param name="xParentLeft"></param>
      <param name="xParentRight"></param>
      <param name="yParentTop"></param>
      <param name="yParentBottom"></param>
      <param name="topSplitterWidth"></param>
      <param name="topSplitterHeight"></param>
      <param name="dataSplitterWidthLeft"></param>
      <param name="dataSplitterWidthRight"></param>
      <param name="dataSplitterHeight"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSize.GetParentWindowPos(.long@,.long@,.long@,.long@)">
      <summary>method GetParentWindowPos</summary>
      <param name="pxLeft"></param>
      <param name="pxRight"></param>
      <param name="pyTop"></param>
      <param name="pyBottom"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSize.GetTopSplitterPaneSize(.long@,.long@)">
      <summary>method GetTopSplitterPaneSize</summary>
      <param name="pWidth"></param>
      <param name="pHeight"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSize.GetDataSplitterPaneSize(.long@,.long@,.long@)">
      <summary>method GetDataSplitterPaneSize</summary>
      <param name="pWidthLeft"></param>
      <param name="pWidthRight"></param>
      <param name="pHeight"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSize.ParentWindowPosValid">
      <summary>property ParentWindowPosValid</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSizeClass">
      <summary>AgUiFlightCatalogMgrSize Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSizeClass.SetSize(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>method SetSize</summary>
      <param name="vbParentPosValid"></param>
      <param name="xParentLeft"></param>
      <param name="xParentRight"></param>
      <param name="yParentTop"></param>
      <param name="yParentBottom"></param>
      <param name="topSplitterWidth"></param>
      <param name="topSplitterHeight"></param>
      <param name="dataSplitterWidthLeft"></param>
      <param name="dataSplitterWidthRight"></param>
      <param name="dataSplitterHeight"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSizeClass.GetParentWindowPos(.long@,.long@,.long@,.long@)">
      <summary>method GetParentWindowPos</summary>
      <param name="pxLeft"></param>
      <param name="pxRight"></param>
      <param name="pyTop"></param>
      <param name="pyBottom"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSizeClass.GetTopSplitterPaneSize(.long@,.long@)">
      <summary>method GetTopSplitterPaneSize</summary>
      <param name="pWidth"></param>
      <param name="pHeight"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSizeClass.GetDataSplitterPaneSize(.long@,.long@,.long@)">
      <summary>method GetDataSplitterPaneSize</summary>
      <param name="pWidthLeft"></param>
      <param name="pWidthRight"></param>
      <param name="pHeight"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightCatalogMgrSizeClass.ParentWindowPosValid">
      <summary>property ParentWindowPosValid</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotate">
      <summary>AgUiFlightProcShiftRotate Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotate.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotate.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotate.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotateClass">
      <summary>AgUiFlightProcShiftRotate Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotateClass.IsValid(System.Object)">
      <summary>method IsValid</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotateClass.DoModal(System.Object,AGI.AgUiFlightUtilities.IAgUiFlightApplyButton,System.Boolean)">
      <summary>method DoModal</summary>
      <param name="pUnkMissionPhaseProcCollection"></param>
      <param name="pButton"></param>
      <param name="vbDoMissionCalculate"></param>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotateClass.Icon">
      <summary>property Icon</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotateClass.AddMenu(AGI.AgFlight.IAgFlightMission,System.Object)">
      <summary>method AddMenu</summary>
      <param name="pMission"></param>
      <param name="pSelection"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotateClass.OnClick">
      <summary>method OnClick</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotateClass.Name">
      <summary>property Name</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotateClass.Enabled">
      <summary>property Enabled</summary>
    </member>
    <member name="P:AGI.AgUiFlightUtilities.AgUiFlightProcShiftRotateClass.MenuType">
      <summary>property MenuType</summary>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactorWizard">
      <summary>AgUiFlightProcedureTurnRadiusFactorWizard Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactorWizard.DoModal(AGI.AgFlight.IAgFlightProcedure,System.Double)">
      <summary>method DoModal</summary>
      <param name="pProc"></param>
      <param name="initTRF"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactorWizardClass">
      <summary>AgUiFlightProcedureTurnRadiusFactorWizard Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightProcedureTurnRadiusFactorWizardClass.DoModal(AGI.AgFlight.IAgFlightProcedure,System.Double)">
      <summary>method DoModal</summary>
      <param name="pProc"></param>
      <param name="initTRF"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightDotNetWidgetsHelper">
      <summary>AgUiFlightDotNetWidgetsHelper Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDotNetWidgetsHelper.SetDotNetComboStrings(System.Int32,AGI.AgComUtilities.IAgComBSTRCollection)">
      <summary>method SetDotNetComboStrings</summary>
      <param name="hComboHandle"></param>
      <param name="pStrings"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDotNetWidgetsHelper.AddDotNetComboString(System.Int32,System.String)">
      <summary>method AddDotNetComboString</summary>
      <param name="hComboHandle"></param>
      <param name="bstrString"></param>
    </member>
    <member name="T:AGI.AgUiFlightUtilities.AgUiFlightDotNetWidgetsHelperClass">
      <summary>AgUiFlightDotNetWidgetsHelper Class</summary>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDotNetWidgetsHelperClass.SetDotNetComboStrings(System.Int32,AGI.AgComUtilities.IAgComBSTRCollection)">
      <summary>method SetDotNetComboStrings</summary>
      <param name="hComboHandle"></param>
      <param name="pStrings"></param>
    </member>
    <member name="M:AGI.AgUiFlightUtilities.AgUiFlightDotNetWidgetsHelperClass.AddDotNetComboString(System.Int32,System.String)">
      <summary>method AddDotNetComboString</summary>
      <param name="hComboHandle"></param>
      <param name="bstrString"></param>
    </member>
  </members>
</doc>